(()=>{"use strict";const e=(Vue.component("basket",{props:["basketGoods","visibility"],template:'\n    <div class="basket_block" v-if="visibility">\n      <div v-if="basketGoods.length>0">\n        <div class="basket_items" v-for="(item, index) in basketGoods">\n          <div class="b_item">\n              <h3>{{item.product_name}}</h3>\n              <p>{{item.price}}</p>\n              <button class="delete_button" @click="deleteFromBasket(index)">Удалить</button>\n          </div>\n        </div>\n      </div>\n    <div v-else>Корзина пуста</div>\n\n  ',methods:{deleteFromBasket(e){this.$emit("del",e)}}}),Vue.component("search",{props:["goods"],template:'\n    <div class="search_block">\n      <input type="text" class="search_Line" v-model="searchLine">\n      <button class="search_button" @click="filterGoods(searchLine)">Поиск</button>\n    </div>\n  ',data:()=>({foundGoods:{}}),methods:{filterGoods(e){this.foundGoods=this.goods.filter((t=>t.product_name.toLowerCase().indexOf(e.toLowerCase())>-1)),this.$emit("showFiltered",this.foundGoods)}}}),Vue.component("vue-header",{props:["goods","basketGoods"],template:'\n    <header class="header_block">\n      <div class="header_wrapper">\n        <search :goods="goods" @showFiltered="showFiltered"></search>\n        <button class="basket_button" type="button" id="basket_button" @click="changeVisibility">Корзина</button> \n        </div>\n   </header> \n',data:()=>({goods:[]}),methods:{changeVisibility(){this.$emit("vBasket",this.goods)},showFiltered(e){this.$emit("showFiltered",e)}}}),Vue.component("vue-goods-item",{props:["good"],template:'\n    <div class="goods-item">\n       <h3 class="card_title">{{good.product_name}}</h3>\n       <p class="card_price">{{good.price}}</p>\n       <button class="buy-button" @click="addToBasket">Купить</button>\n    </div>\n  ',methods:{addToBasket(){this.$emit("add",this.good)}}}),Vue.component("vue-goods-list",{props:["goods"],template:'\n    <div class="goods-list" id="goods_list">\n      <vue-goods-item v-for="good in goods" :good="good" @add="addToBasket"></vue-goods-item>\n    </div>\n  ',methods:{addToBasket(e){this.$emit("add",e)}}}),Vue.component("vue-main",{props:["goods"],template:'<vue-goods-list :goods="goods" @add="addToBasket"></vue-goods-list>',data:()=>({goods:[]}),methods:{addToBasket(e){this.$emit("add",e)}}}),(e,t)=>new Promise((o=>{let s;window.XMLHttpRequest?s=new XMLHttpRequest:window.ActiveXObject&&(s=new ActiveXObject("Microsoft.XMLHTTP")),s.onreadystatechange=function(){4===s.readyState&&(console.log(s.response),o(s.responseText))},s.open("POST",e,!0),s.setRequestHeader("Content-Type","application/json; charset=UTF-8"),s.send(JSON.stringify(t))})));var t={action:"",product_name:"",time:0};new Vue({el:"#page",template:'\n  <div>\n    <vue-header :goods="goods" :basketGoods="basketGoods" @vBasket="viewBasket" @showFiltered="showFiltered" ></vue-header>\n    <vue-main :goods="foundGoods" @add="addToBasket"></vue-main>\n    <basket :basketGoods="basketGoods" :visibility="isVisibleCard" @del="deleteFromBasket"></basket>\n  </div>\n  ',data:{isVisibleCard:!1,goods:[],searchLine:"",foundGoods:[],basketGoods:[]},methods:{viewBasket(){this.isVisibleCard=!this.isVisibleCard},showFiltered(e){this.foundGoods=e},addToBasket(o){this.basketGoods.push(o),e("/addToCart",o),t.action="Add",t.product_name=o.product_name;var s=new Date;t.time=s,e("/addAction",t)},deleteFromBasket(o){t.action="Delete",t.product_name=this.basketGoods[o].product_name;var s=new Date;t.time=s,e("/addAction",t),this.basketGoods.splice(o,1),e("/deleteFromCart",this.basketGoods)},basketSum(){for(var e=0,t=0;t<this.basketGoods.length;t++)e+=this.basketGoods.price;return e},numberOfGoods(){return this.basketGoods.length}},mounted:async function(){return await fetch("/catalog").then((e=>e.json())).then((e=>{this.goods=e,this.foundGoods=e}))}})})();